from aiogram import F, Router, types

from app.ai_integration import generate_full_weather_report
from app.keyboards import main_menu_kb
from app.storage import get_user_data, user_exists
from app.utils.checker import is_family_member
from app.utils.weather import fetch_forecast_data

router = Router()


@router.message(F.text == "–ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–≥–æ–¥—É –∑–∞—Ä–∞–∑ üå§")
async def show_weather_now(message: types.Message):
    user_id = message.from_user.id

    if not is_family_member(message.from_user.id):
        await message.answer("‚õîÔ∏è –ë–æ—Ç –¥–æ—Å—Ç—É–ø–Ω–∏–π –ª–∏—à–µ –¥–ª—è –Ω–∞—à–æ—ó —Ä–æ–¥–∏–Ω–∏ ‚ù§Ô∏è")
        return

    if not user_exists(user_id):
        await message.answer("‚ö†Ô∏è –¢–∏ —â–µ –Ω–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–≤ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è. –ù–∞–ø–∏—à–∏ /start.")
        return

    user_data = get_user_data(user_id)

    lat = user_data.get("lat")
    lon = user_data.get("lon")

    if lat is None or lon is None:
        await message.answer(
            "‚ö†Ô∏è –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ. –°–ø—Ä–æ–±—É–π –∑–º—ñ–Ω–∏—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è."
        )
        return

    try:
        lat = float(lat)
        lon = float(lon)
    except (TypeError, ValueError):
        await message.answer("‚ö†Ô∏è –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω—ñ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏. –°–ø—Ä–æ–±—É–π –∑–º—ñ–Ω–∏—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è.")
        return

    forecast_points = await fetch_forecast_data(lat, lon)
    if not forecast_points:
        await message.answer("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ–≥–Ω–æ–∑. –°–ø—Ä–æ–±—É–π –ø—ñ–∑–Ω—ñ—à–µ.")
        return

    text = await generate_full_weather_report(user_id, lat, lon, forecast_points)
    await message.answer(text, reply_markup=main_menu_kb())

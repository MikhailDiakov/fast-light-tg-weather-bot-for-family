from aiogram import F, Router, types
from aiogram.fsm.context import FSMContext

from app.keyboards import location_request_kb_no_back, services_kb, settings_kb
from app.states import WeatherForm
from app.utils.checker import is_family_member

router = Router()


@router.message(F.text == "/start")
async def cmd_start(message: types.Message, state: FSMContext):
    if not is_family_member(message.from_user.id):
        await message.answer("‚õîÔ∏è –ë–æ—Ç –¥–æ—Å—Ç—É–ø–Ω–∏–π –ª–∏—à–µ –¥–ª—è –Ω–∞—à–æ—ó —Ä–æ–¥–∏–Ω–∏ ‚ù§Ô∏è")
        return

    await state.clear()
    await state.set_state(WeatherForm.city)
    await state.update_data(action="new")
    await message.answer(
        "–ü—Ä–∏–≤—ñ—Ç! –ù–∞–¥—ñ—à–ª–∏, –±—É–¥—å –ª–∞—Å–∫–∞, —Å–≤–æ—é –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—é üìç",
        reply_markup=location_request_kb_no_back(),
    )


@router.message(F.text == "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ‚öôÔ∏è")
async def show_settings_menu(message: types.Message, state: FSMContext):
    if not is_family_member(message.from_user.id):
        await message.answer("‚õîÔ∏è –ë–æ—Ç –¥–æ—Å—Ç—É–ø–Ω–∏–π –ª–∏—à–µ –¥–ª—è –Ω–∞—à–æ—ó —Ä–æ–¥–∏–Ω–∏ ‚ù§Ô∏è")
        return

    await message.answer("‚öôÔ∏è –ú–µ–Ω—é –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å:", reply_markup=settings_kb())


@router.message(F.text == "–°–µ—Ä–≤—ñ—Å–∏ üõ†")
async def show_services_menu(message: types.Message, state: FSMContext):
    if not is_family_member(message.from_user.id):
        await message.answer("‚õîÔ∏è –ë–æ—Ç –¥–æ—Å—Ç—É–ø–Ω–∏–π –ª–∏—à–µ –¥–ª—è –Ω–∞—à–æ—ó —Ä–æ–¥–∏–Ω–∏ ‚ù§Ô∏è")
        return

    await message.answer("üõ† –û–±–µ—Ä–∏ —Å–µ—Ä–≤—ñ—Å:", reply_markup=services_kb())


@router.message(F.text == "/myid")
async def send_user_id(message: types.Message):
    user_id = message.from_user.id
    await message.answer(f"üÜî –¢–≤—ñ–π Telegram ID: `{user_id}`", parse_mode="Markdown")

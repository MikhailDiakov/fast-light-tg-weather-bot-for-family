from aiogram import F, Router, types

from app.storage import get_user_data, user_exists
from app.utils.checker import is_family_member
from app.utils.city import get_city_name_from_coords

router = Router()


@router.message(F.text == "–î—ñ–∑–Ω–∞—Ç–∏—Å—å –º—ñ—Å—Ç–æ üèôÔ∏è")
async def get_city_name(message: types.Message):
    user_id = message.from_user.id

    if not is_family_member(user_id):
        await message.answer("‚õîÔ∏è –ë–æ—Ç –¥–æ—Å—Ç—É–ø–Ω–∏–π –ª–∏—à–µ –¥–ª—è –Ω–∞—à–æ—ó —Ä–æ–¥–∏–Ω–∏ ‚ù§Ô∏è")
        return

    if not user_exists(user_id):
        await message.answer("‚ö†Ô∏è –¢–∏ —â–µ –Ω–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–≤ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è. –ù–∞–ø–∏—à–∏ /start.")
        return

    user_data = get_user_data(user_id)
    lat = user_data.get("lat")
    lon = user_data.get("lon")

    if lat is None or lon is None:
        await message.answer(
            "‚ö†Ô∏è –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ. –°–ø–æ—á–∞—Ç–∫—É –Ω–∞–¥—ñ—à–ª–∏ –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—é."
        )
        return

    try:
        lat = float(lat)
        lon = float(lon)
    except (TypeError, ValueError):
        await message.answer("‚ö†Ô∏è –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω—ñ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏. –°–ø—Ä–æ–±—É–π –∑–º—ñ–Ω–∏—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è.")
        return

    city_name = await get_city_name_from_coords(lat, lon)
    if city_name:
        await message.answer(
            f"–Ø–∫—â–æ —è –Ω–µ –ø–æ–º–∏–ª—è—é—Å—å, —Ü–µ –º—ñ—Å—Ç–æ: {city_name}.\n"
            f"–Ø–∫—â–æ —Ü–µ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ ‚Äî —É—Å—ñ –ø–∏—Ç–∞–Ω–Ω—è –¥–æ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—ñ–≤ –¢–µ–ª–µ–≥—Ä–∞–º–∞, —è —Ç—É—Ç –Ω—ñ –¥–æ —á–æ–≥–æ üòâ"
        )
    else:
        await message.answer(
            "–Ø –Ω–µ –∑–º—ñ–≥ –≤–∏–∑–Ω–∞—á–∏—Ç–∏ –º—ñ—Å—Ç–æ üòî. –ê–ª–µ –≤—Å—ñ –ø–∏—Ç–∞–Ω–Ω—è ‚Äî –¥–æ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—ñ–≤ –¢–µ–ª–µ–≥—Ä–∞–º–∞ üòâ"
        )
